name: EAS Build

on:
  push:
     tags:
       - 'v[0-9]+'
       - 'v[0-9]+.[0-9]+'
       - 'v[0-9]+.[0-9]+.[0-9]+'
       - 'v[0-9]+.[0-9]+.[0-9]+-*'
  release:
    types: [published]

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      EXPO_PUBLIC_GRAPHQL_URL: ${{ secrets.EXPO_PUBLIC_GRAPHQL_URL }}
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install
      
      - name: Build on EAS
        run: npx eas-cli build --platform android --non-interactive --no-wait

      - name: Install eas-cli latest version
        run: npm install -g eas-cli@latest
      
      - name: Get APK URL
        id: get-apk-url
        run: |
          while true; do
            build_status=$(eas build:list --json --non-interactive --limit=1 --platform=android | jq -r '.[0].status')
            echo "Build status is $build_status"
            
            if [ "$build_status" = "FINISHED" ]; then
              apk_url=$(eas build:list --json --non-interactive --limit=1 --platform=android | jq -r '.[0].artifacts.buildUrl')
              echo "APK_URL=$apk_url" >> "$GITHUB_OUTPUT"
              break
            elif [ "$build_status" == "CANCELED" ] || [ "$build_status" == "ERRORED" ]; then
              echo "Build status is $build_status"
              exit 1
            else
              echo "Build is still in progress..."
              sleep 1800
            fi
          done

      - name: Update README with APK link
        run: |
          latest_apk_url=$(echo "${{ steps.get-apk-url.outputs.APK_URL }}")
          sed -i "s#\[Download APK\].*#\[Download APK\](${latest_apk_url})#" README.md
          git add README.md
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -m "Update README with latest APK download link" -a || true
          git pull origin HEAD:main
          git push origin HEAD:main
